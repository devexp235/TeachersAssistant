@model TeacherAssistant.Models.TeacherCalendarViewModel
@{
    ViewBag.Title = "Book Teacher Help Time";
    Layout = "~/Areas/StatePrimary/Views/Shared/_LayoutStatePrimary.cshtml";
}
@using (Html.BeginForm())
{
<div class="form-horizontal">
    <h2>Teachers Calender</h2><br />
    <hr />
    <h2>Book Teacher Help Time</h2>
    <div>
        <!--Calendar-->
        @{ Html.RenderPartial("_TeachersCalendarEditable");}
    </div>
    <div style="background-color: #DADADA;">
        <div style="padding:5px;">
            <div class="form-group">
                @Html.LabelFor(model => model.CalendarBookingId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CalendarBookingId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CalendarBookingId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TeacherId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TeacherId", ViewBag.TeacherList as List<SelectListItem>, "TeacherName", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SubjectId", ViewBag.SubjectList as List<SelectListItem>, "SubjectName", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BookingTimes[0].StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookingTimes[0].StartTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.BookingTimes[0].StartTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BookingTimes[0].EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BookingTimes[0].EndTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.BookingTimes[0].EndTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="Create" value="Create" class="btn btn-default" />
                    <input type="submit" name="Update" value="Update" class="btn btn-default" />
                    <input type="submit" name="Delete" value="Delete" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
</div>
}
<script type="text/javascript">
    $(document).ready(function(){
        var calendarJsonString = @Html.Raw(Json.Encode(ViewBag.CalendarUiList));
        if(calendarJsonString){
            var events = [];
            var teacher = null;
            var student = null;

            for(var n=0; n<calendarJsonString.length; n++){
                var calendarItem = calendarJsonString[n];

                teacher = calendarItem.Teacher.EmailAddress;
                student = calendarItem.Student.EmailAddress;
                var subject = calendarItem.Subject.SubjectName;
                var startDate = new Date(parseInt(calendarItem.BookingTime.StartTime.substr(6)));
                var endDate = new Date(parseInt(calendarItem.BookingTime.EndTime.substr(6)));
                events.push({ start: startDate, end: endDate, summary: subject+', with '+student.substr(0,student.indexOf('@@'))+'<br/> from: '+startDate.getHours()+':'+startDate.getMinutes()+' <br/>to: '+endDate.getHours()+':'+endDate.getMinutes(), mask: true, color: 'red' });
            }

            $('div#calendar').calendar({
                events: events
            });

            $('h4#title').text('Calendar for: Teacher: '+teacher + ', with Student: '+student);
        }
    });

</script>