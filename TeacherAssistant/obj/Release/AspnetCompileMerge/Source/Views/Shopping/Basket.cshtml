@using TeacherAssistant.Infrastructure
@using TeacherAssistant.Infrastructure.ExtensionMethods
@using TeachersAssistant.Domain.Model.Models
@model IEnumerable<SHOP_PRODS>
@using UPAEventsPayPal

@{
    ViewBag.Title = "Basket";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var countItems = 0;
    var url = "/Home/Basket/{0}";
    var pageIndex = 0;
    var startIndex = 0;
    var endIndex = 0;
    try
    {
        pageIndex = ((PagingInfo)((Paging)Session["PagingInfo2"]).PagingInfoDetails).CurrentPageIndex;
        startIndex = ((Paging)Session["PagingInfo2"]).StartDisplayFromPage() - 1;
        endIndex = startIndex + ((PagingInfo)((Paging)Session["PagingInfo2"]).PagingInfoDetails).NumberOfPagesToDisplay >=
                       ((PagingInfo)((Paging)Session["PagingInfo2"]).PagingInfoDetails).NumberOfPages ?
                           ((PagingInfo)((Paging)Session["PagingInfo2"]).PagingInfoDetails).NumberOfPages - 1 :
                           startIndex + ((PagingInfo)((Paging)Session["PagingInfo2"]).PagingInfoDetails).NumberOfPagesToDisplay - 1;

    }
    catch (Exception e)
    {
        Response.Redirect("~/Home/Index");
    }
    decimal runningCosts = (decimal)0.00;
    var shoppingBasket = (IList<SHOP_PRODS>)Session["ShoppingBasket"];
    if (shoppingBasket != null && shoppingBasket.Count > 0)
    {
        var upaProducts = shoppingBasket.Select(item => new UPAEventsPayPal.Product { Ammount = item.prodPrice, ProductDescription = item.prodDesc, ProductName = item.prodName, Quantity = 1, VATAmmount = 0 }).ToList();
        runningCosts = shoppingBasket.Sum(item => item.prodPrice);

    }
}
<style type="text/css">
    td.prodCells {
        width: 25%;
        font-family: sans-serif;
        font-size: medium;
        color: white;
        padding: 4px;
        background-color: lightslategray;
    }

    th.prodCells,tfoot td.prodCells  {
        text-align: center;
        background-color: teal;
        padding: 10px;
        color: white;
		width: 25%;

    table.prods {
        margin-right: auto;
        margin-left: auto;
        width: 66%;
        border-color: white;
        border-width: 2px;
		margin-bottom: 0px;
    }

    div.paging {
        padding-bottom: 10px;
        background-color: brown;
        font: san-serif;
        font-size: small;
        padding-top: 10px;
        margin-left: auto;
        margin-right: auto;
        width: 66%;
    }

    a.selectedLink {
        font-weight: bold;
        color: white;
        padding: 5px;
    }

    a.normalLink {
        color: silver;
        padding: 5px;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $('input#ShoppingList').click(function () {
            window.location.href = '/Shopping/ShopContentListing';
        });
    });
</script>
<script type="text/javascript">

    $(document).ready(function () {

    $('input#btnPayment').click(function() {
        window.location.href = "/Shopping/Payment";
    });
        if ('@((((Paging)Session["PagingInfo2"])).EnableNextPageLink())' == 'True') {
            $('span#nextPage').css('display', 'inline');
        }
        else { $('span#nextPage').css('display', 'none'); }
        if ('@((((Paging)Session["PagingInfo2"])).EnableNextSetPageLinks())' == 'True') {
            $('span#nextPageSet').css('display', 'inline');
        }
        else { $('span#nextPageSet').css('display', 'none'); }
        if ('@((((Paging)Session["PagingInfo2"])).EnablePreviousPageLink())' == 'True') {
            $('span#previousPage').css('display', 'inline');
        }
        else { $('span#previousPage').css('display', 'none'); }
        if ('@((((Paging)Session["PagingInfo2"])).EnablePreviousSetPageLinks())' == 'True') {
            $('span#previousPageSet').css('display', 'inline');
        }
        else { $('span#previousPageSet').css('display', 'none'); }
    });
</script>

<style type="text/css">
    #navigation ul {
        height: 47px;
    }
</style>
<div style="text-align: center;">

    <div class="centralProduct" style="background-color: #DADADA;">

        <div class="row" style="margin-right: 0px; margin-left: 0px; text-align: left;">
            <h2>Basket</h2>
            <div style="padding-left: 10px; padding-top: 20px;">
                <div style="margin-left: 20px;" class="row">
                    <label id="greeting" style="font-weight: bold; margin-bottom: 10px; color: #AD0000;">Welcome @User.Identity.Name</label>
                </div>
                <div class="row">
                    <div class="col-lg-2">
                        <div style="height: auto;">
                            <div">
                                <img id="Img1" alt="No image" src="@Url.Content("~/images/basket.jpg")"/><br/>
                                <input id="btnPayment" type="button" value="Make Payment" class="oneRow3but" style="font-weight: bold; margin-top: 10px;"/><br/>
                                <input id="ShoppingList" type="button" value="Product Page" class="oneRow3but"  style="font-weight: bold; margin-top: 10px;"/><br/>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8" style="text-align: center;">
                        @if (Model.Count() > 0)
                        {
                            <div class="paging" style="width: 100%;">
                                <span id="previousPageSet"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).PreviousSetPages()})"><<</a> | </span><span id="previousPage"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).PreviousPage()})"><</a> | </span><span id="listingOfPages">@Html.Raw(Html.Page(pageIndex, startIndex, endIndex, url))|</span><span id="nextPage"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).NextPage()})">></a> | </span><span id="nextPageSet"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).NextSetPages()})">>></a></span>
                            </div>

                            <div class="prods row">
                                <thead>
                                <th class="col-lg-2">Product ID</th>
                                <th class="col-lg-2">Product Name</th>
                                <th class="col-lg-2">Price</th>
                                <th class="col-lg-2">Remove</th>
                                </thead>
                                <tbody>

                                @foreach (var product in Model)
                                {
                                    <div id="@product.prodCode" class="row">
                                        <div class="prodCells col-lg-2">@product.prodId</div>
                                        <div class="prodCells col-lg-2">@product.prodName</div>
                                        <div class="prodCells col-lg-2">@product.prodPrice</div>
                                        <div class="prodCells col-lg-2">
                                            @using (Html.BeginForm("BasketRemoveProduct", "Home", new {prodCode = product.prodId, prodPrice = product.prodPrice}))
                                            {
                                                <input type="submit" id="@product.prodId" class="oneRow3but  col-lg-2" style="font-weight: bold;" value="Remove"/><br/>
                                            }

                                        </div>
                                    </div>
                                    countItems++;
                                    if (countItems >= 3)
                                    {
                                        break;
                                    }
                                }
                                </tbody>
                                <tfoot>
                                <td class="prodCells">&nbsp;</td>
                                <td class="prodCells">&nbsp;</td>
                                <td class="prodCells">&nbsp;</td>
                                <td class="prodCells">&nbsp;</td>
                                </tfoot>
                            </div>

                            <div class="paging" style="width: 100%;">
                                <span id="previousPageSet"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).PreviousSetPages()})"><<</a> | </span><span id="previousPage"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).PreviousPage()})"><</a> | </span><span id="listingOfPages">@Html.Raw(Html.Page(pageIndex, startIndex, endIndex, url))|</span><span id="nextPage"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).NextPage()})">></a> | </span><span id="nextPageSet"><a class="normalLink" href="@Url.Action("Basket", "Home", new {page = (((Paging) Session["PagingInfo2"])).NextSetPages()})">>></a></span>
                            </div>
                        }
                        <div style="font-weight: bold; font-family: Tahoma; font-size: small; text-align: center; color: Red; width: 100%;">
                            <label id="ltRunningCost">Current running costs: $@runningCosts</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix" style="margin-top: 1%;">
    </div>
